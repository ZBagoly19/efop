%% training and validation
numFeatures = size(XTrain_my2{1},1);
numResponses = size(YTrain_my2{1},1);

net = [
    sequenceInputLayer(numFeatures)
    %imageInputLayer([1 43], 'Normalization', 'none')
    fullyConnectedLayer(64, 'Name', 'fc_1')
    reluLayer()
    fullyConnectedLayer(64, 'Name', 'fc_2')
    reluLayer()
    fullyConnectedLayer(64, 'Name', 'fc_3')
    reluLayer()
    fullyConnectedLayer(64, 'Name', 'fc_4')
    reluLayer()
    
    fullyConnectedLayer(numResponses, 'Name', 'fc_last')
    regressionLayer()
 ]

options = trainingOptions('adam', ...
    'ExecutionEnvironment', 'gpu', ...
    'MaxEpochs', 2, ...
    'Shuffle', 'once', ...
    'MiniBatchSize', 850, ...
    'ValidationData', {XValidation_my2, YValidation_my2}, ...
    'ValidationFrequency', 25, ...
    'InitialLearnRate', 0.0002, ...
    'LearnRateSchedule', 'piecewise', ...
    'LearnRateDropPeriod', 180, ...
    'LearnRateDropFactor', 0.3, ...
    'L2Regularization', 0.0000001, ...
    'Verbose', false, ...
    'Plots', 'training-progress');

options_hy = trainingOptions('adam', ...
    'MaxEpochs',2, ...
    'MiniBatchSize',850, ...
    'InitialLearnRate',0.01, ...
    'ValidationData', {XValidation_my2, YValidation_my2}, ...
    'ValidationFrequency', 25, ...
    'GradientThreshold',1, ...
    'Shuffle','once', ...
    'Plots','training-progress',...
    'Verbose',false);

%% from example
net_ex = [ ...
    sequenceInputLayer(numFeatures)
    lstmLayer(200,'OutputMode','sequence')
    fullyConnectedLayer(50)
    dropoutLayer(0.5)
    fullyConnectedLayer(numResponses)
    regressionLayer];

options_ex = trainingOptions('adam', ...
    'MaxEpochs',400, ...
    'MiniBatchSize',850, ...
    'InitialLearnRate',0.01, ...
    'ValidationData', {XValidation_my, YValidation_my}, ...
    'ValidationFrequency', 25, ...
    'GradientThreshold',1, ...
    'Shuffle','once', ...
    'Plots','training-progress',...
    'Verbose',0);

%% train
[trained_net, trained_net_info] = trainNetwork(XTrain_my2, YTrain_my2, net, options_hy);

%% inference
YPred_my = predict(trained_net, XValidation_my2(1), 'MiniBatchSize', 1);
idx = [1 7 14 25];
figure
for i = 1:numel(idx)
    subplot(2,4,i)
    
    plot(YValidation_my{idx(i)}(1, :),'--')
    hold on
    plot(YPred_my{idx(i)}(1, :),'.-')
    hold off
    
    ylim([-3.5 3.5])
    title("Test Observation " + idx(i) + " Vel")
    xlabel("moment")
    ylabel("raw data")
    
    subplot(2,4,i+4)
    
    plot(YValidation_my{idx(i)}(2, :),'--')
    hold on
    plot(YPred_my{idx(i)}(2, :),'.-')
    hold off
    
    ylim([-3.5 3.5])
    title("Test Observation " + idx(i) + " Ang Vel")
    xlabel("moment")
    ylabel("raw data")
end
